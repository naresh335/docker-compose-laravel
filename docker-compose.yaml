version: '3.2'

networks:
  laravel: 

services: 
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    volumes:
      - ${HOME}/mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: laravel ## setup your secure pass
    networks:
      - laravel

  php:
    image: user335/php:74  ## valid options php:56,php:70,php:71,php:72,php:73,php:74
    container_name: php-74
    volumes:
      - ./:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin:latest
    ports: 
      - "8888:80"
    networks:
      - laravel
    links:
      - mysql:db
    depends_on:
      - mysql
    restart: always

  ## uncomment below block if you want to use redis as your cache server
  # redis:
  #   image: redis:latest
  #   ports: 
  #     - "6479:6379"
  #   networks:
  #     - laravel
  #   restart: always
  
  npm: 
    image: node:14.17.0-slim
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    container_name: node14
    entrypoint: ["npm"]
    networks:
      - laravel

  artisan:
    build:
      context: .
      cache_from:
        - user335/php:74
    container_name: artisan
    volumes:
      - ./:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/artisan']
    networks:
      - laravel

  composer:
    image: composer:1.10.22 ## use composer:latest for v2
    container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel
